#!/usr/bin/env node

/**
 * Module dependencies.
 */

const Web3 = require('web3');
const RLP = require('rlp');
const ethUtils = require('ethereumjs-util');


// Registering the RLP DECODER contract

async function main() {
    // Initialise web3
    var web3Provider = new Web3.providers.HttpProvider('http://localhost:8545');
    web3 = new Web3(web3Provider);

    const networkId = await web3.eth.net.getId();
    console.log('Using network ' + networkId);

    // Send ether to Rocket Pool as a new user
    var accounts = await web3.eth.getAccounts()
                                 .catch((error) => exit(error));

    var sendAmount = web3.utils.toWei('6', 'ether'); // 5 is current dev threshold for a pool to be deployed to casper 


    // TX for the RLP DECODER CONTRACT HERE https://github.com/ethereum/vyper/blob/master/vyper/utils.py#L110
    let tx = await web3.eth.sendTransaction({
        from: accounts[0],
        to: '0xd2c560282c9C02465C2dAcdEF3E859E730848761',
        value: 6270960000000000,
        gas: 1000000,
    });

    console.log(tx);
   
    // TX for the RLP DECODER CONTRACT HERE https://github.com/ethereum/vyper/blob/master/vyper/utils.py#L110
    let tx2 = await web3.eth.sendSignedTransaction('0xf90237808506fc23ac00830330888080b902246102128061000e60003961022056600060007f010000000000000000000000000000000000000000000000000000000000000060003504600060c082121515585760f882121561004d5760bf820336141558576001905061006e565b600181013560f783036020035260005160f6830301361415585760f6820390505b5b368112156101c2577f010000000000000000000000000000000000000000000000000000000000000081350483602086026040015260018501945060808112156100d55760018461044001526001828561046001376001820191506021840193506101bc565b60b881121561014357608081038461044001526080810360018301856104600137608181141561012e5760807f010000000000000000000000000000000000000000000000000000000000000060018401350412151558575b607f81038201915060608103840193506101bb565b60c08112156101b857600182013560b782036020035260005160388112157f010000000000000000000000000000000000000000000000000000000000000060018501350402155857808561044001528060b6838501038661046001378060b6830301830192506020810185019450506101ba565bfe5b5b5b5061006f565b601f841315155857602060208502016020810391505b6000821215156101fc578082604001510182826104400301526020820391506101d8565b808401610420528381018161044003f350505050505b6000f31b2d4f');

    console.log(tx2);

}

// Run it
main();

